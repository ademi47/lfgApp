{"ast":null,"code":"var _jsxFileName = \"E:\\\\LFGApp\\\\client\\\\src\\\\components\\\\CreatePostForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { API_URL } from \"../config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreatePostForm = ({\n  userId\n}) => {\n  _s();\n  const [gameType, setGameType] = useState(\"\");\n  const [region, setRegion] = useState(\"\");\n  const [gameMode, setGameMode] = useState(\"\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log(\"Creating post with user_id:\", userId); // Check if user_id is available\n\n    try {\n      const response = await axios.post(`${API_URL}/posts`, {\n        game_type: gameType,\n        region,\n        game_mode: gameMode,\n        user_id: userId // Pass the discord_id as user_id\n      });\n      console.log(\"Post created successfully:\", response.data);\n      // Handle success (e.g., show a success message or redirect)\n    } catch (error) {\n      console.error(\"Error creating post:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Game Type:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: gameType,\n        onChange: e => setGameType(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Region:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: region,\n        onChange: e => setRegion(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Game Mode:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: gameMode,\n        onChange: e => setGameMode(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Create LFG Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(CreatePostForm, \"nTeGnTllmQdxE3Z+oMN7ldSJo+M=\");\n_c = CreatePostForm;\nexport default CreatePostForm;\nvar _c;\n$RefreshReg$(_c, \"CreatePostForm\");","map":{"version":3,"names":["React","useState","axios","API_URL","jsxDEV","_jsxDEV","CreatePostForm","userId","_s","gameType","setGameType","region","setRegion","gameMode","setGameMode","handleSubmit","e","preventDefault","console","log","response","post","game_type","game_mode","user_id","data","error","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["E:/LFGApp/client/src/components/CreatePostForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { API_URL } from \"../config\";\r\n\r\nconst CreatePostForm = ({ userId }) => {\r\n  const [gameType, setGameType] = useState(\"\");\r\n  const [region, setRegion] = useState(\"\");\r\n  const [gameMode, setGameMode] = useState(\"\");\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    console.log(\"Creating post with user_id:\", userId); // Check if user_id is available\r\n\r\n    try {\r\n      const response = await axios.post(`${API_URL}/posts`, {\r\n        game_type: gameType,\r\n        region,\r\n        game_mode: gameMode,\r\n        user_id: userId, // Pass the discord_id as user_id\r\n      });\r\n\r\n      console.log(\"Post created successfully:\", response.data);\r\n      // Handle success (e.g., show a success message or redirect)\r\n    } catch (error) {\r\n      console.error(\"Error creating post:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <label>Game Type:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={gameType}\r\n          onChange={(e) => setGameType(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n      <div>\r\n        <label>Region:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={region}\r\n          onChange={(e) => setRegion(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n      <div>\r\n        <label>Game Mode:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={gameMode}\r\n          onChange={(e) => setGameMode(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n      <button type=\"submit\">Create LFG Post</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CreatePostForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}