{"ast":null,"code":"var _jsxFileName = \"E:\\\\LFGApp\\\\client\\\\src\\\\components\\\\CreatePostForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useAuth } from \"../context/AuthContext\";\nimport { API_URL } from \"../config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreatePostForm = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const [gameType, setGameType] = useState(\"\");\n  const [region, setRegion] = useState(\"\");\n  const [gameMode, setGameMode] = useState(\"\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log(\"Creating post with user_id:\", user.discord_id); // Check if user_id is available\n\n    try {\n      const response = await axios.post(`${API_URL}/posts`, {\n        game_type: gameType,\n        region,\n        game_mode: gameMode,\n        user_id: user.discord_id // Pass the discord_id as user_id\n      });\n      console.log(\"Post created successfully:\", response.data);\n      // Handle success (e.g., show a success message or redirect)\n    } catch (error) {\n      console.error(\"Error creating post:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Create Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(CreatePostForm, \"t/ZZS3VT/HtxwfTbOaqfMnLNBAw=\", false, function () {\n  return [useAuth];\n});\n_c = CreatePostForm;\nexport default CreatePostForm;\nvar _c;\n$RefreshReg$(_c, \"CreatePostForm\");","map":{"version":3,"names":["React","useState","axios","useAuth","API_URL","jsxDEV","_jsxDEV","CreatePostForm","_s","user","gameType","setGameType","region","setRegion","gameMode","setGameMode","handleSubmit","e","preventDefault","console","log","discord_id","response","post","game_type","game_mode","user_id","data","error","onSubmit","children","type","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/LFGApp/client/src/components/CreatePostForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useAuth } from \"../context/AuthContext\";\r\nimport { API_URL } from \"../config\";\r\n\r\nconst CreatePostForm = () => {\r\n  const { user } = useAuth();\r\n  const [gameType, setGameType] = useState(\"\");\r\n  const [region, setRegion] = useState(\"\");\r\n  const [gameMode, setGameMode] = useState(\"\");\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    console.log(\"Creating post with user_id:\", user.discord_id); // Check if user_id is available\r\n\r\n    try {\r\n      const response = await axios.post(`${API_URL}/posts`, {\r\n        game_type: gameType,\r\n        region,\r\n        game_mode: gameMode,\r\n        user_id: user.discord_id, // Pass the discord_id as user_id\r\n      });\r\n\r\n      console.log(\"Post created successfully:\", response.data);\r\n      // Handle success (e.g., show a success message or redirect)\r\n    } catch (error) {\r\n      console.error(\"Error creating post:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      {/* Form fields for game_type, region, game_mode */}\r\n      <button type=\"submit\">Create Post</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CreatePostForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,wBAAwB;AAChD,SAASC,OAAO,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM;IAAEC;EAAK,CAAC,GAAGN,OAAO,CAAC,CAAC;EAC1B,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMe,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElBC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEX,IAAI,CAACY,UAAU,CAAC,CAAC,CAAC;;IAE7D,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMpB,KAAK,CAACqB,IAAI,CAAC,GAAGnB,OAAO,QAAQ,EAAE;QACpDoB,SAAS,EAAEd,QAAQ;QACnBE,MAAM;QACNa,SAAS,EAAEX,QAAQ;QACnBY,OAAO,EAAEjB,IAAI,CAACY,UAAU,CAAE;MAC5B,CAAC,CAAC;MAEFF,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEE,QAAQ,CAACK,IAAI,CAAC;MACxD;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdT,OAAO,CAACS,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,oBACEtB,OAAA;IAAMuB,QAAQ,EAAEb,YAAa;IAAAc,QAAA,eAE3BxB,OAAA;MAAQyB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAW;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtC,CAAC;AAEX,CAAC;AAAC3B,EAAA,CAhCID,cAAc;EAAA,QACDJ,OAAO;AAAA;AAAAiC,EAAA,GADpB7B,cAAc;AAkCpB,eAAeA,cAAc;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}